import{_ as e,c as p,b as t,a as n,d as l,e as o,r,o as i}from"./app-CHYapVbF.js";const c={},d={href:"https://gofrp.org/zh-cn/docs/examples/vhost-http/",target:"_blank",rel:"noopener noreferrer"};function u(m,s){const a=r("ExternalLinkIcon");return i(),p("div",null,[s[1]||(s[1]=t(`<p>通过简单配置 HTTP 类型的代理，您可以让用户通过自定义域名访问内网的 Web 服务。 HTTP 类型的代理非常适合将内网的 Web 服务通过自定义域名提供给外部用户。相比于 TCP 类型代理，HTTP 代理不仅可以复用端口，还提供了基于 HTTP 协议的许多功能。</p><p>HTTPS 与此类似，但是需要注意，frp 的 https 代理需要本地服务是 HTTPS 服务，frps 端不会做 TLS 终止。也可以结合 https2http 插件来实现将本地的 HTTP 服务以 HTTPS 协议暴露出去。</p><p>步骤如下：</p><h2 id="_1-配置-frps-toml" tabindex="-1"><a class="header-anchor" href="#_1-配置-frps-toml"><span>1.配置 frps.toml</span></a></h2><p>在 frps.toml 文件中添加以下内容，以指定 HTTP 请求的监听端口为 8080：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">bindPort <span class="token operator">=</span> <span class="token number">7000</span></span>
<span class="line">vhostHTTPPort <span class="token operator">=</span> <span class="token number">8080</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要配置 HTTPS 代理，还需要设置 vhostHTTPSPort。</p><h2 id="_2-配置-frpc-toml" tabindex="-1"><a class="header-anchor" href="#_2-配置-frpc-toml"><span>2.配置 frpc.toml</span></a></h2><p>在 frpc.toml 文件中添加以下内容，确保设置了正确的服务器 IP 地址、本地 Web 服务监听端口和自定义域名：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">serverAddr <span class="token operator">=</span> <span class="token string">&quot;x.x.x.x&quot;</span></span>
<span class="line">serverPort <span class="token operator">=</span> <span class="token number">7000</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span>proxies<span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;web&quot;</span></span>
<span class="line"><span class="token builtin class-name">type</span> <span class="token operator">=</span> <span class="token string">&quot;http&quot;</span></span>
<span class="line">localPort <span class="token operator">=</span> <span class="token number">80</span></span>
<span class="line">customDomains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;www.yourdomain.com&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span>proxies<span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;web2&quot;</span></span>
<span class="line"><span class="token builtin class-name">type</span> <span class="token operator">=</span> <span class="token string">&quot;http&quot;</span></span>
<span class="line">localPort <span class="token operator">=</span> <span class="token number">8080</span></span>
<span class="line">customDomains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;www.yourdomain2.com&quot;</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-启动-frps-和-frpc" tabindex="-1"><a class="header-anchor" href="#_3-启动-frps-和-frpc"><span>3.启动 frps 和 frpc</span></a></h2><h2 id="_4-域名解析" tabindex="-1"><a class="header-anchor" href="#_4-域名解析"><span>4.域名解析</span></a></h2><p>将 www.yourdomain.com 和 www.yourdomain2.com 的域名 A 记录解析到服务器的 IP 地址 x.x.x.x。如果服务器已经有对应的域名，您还可以将 CNAME 记录解析到原始域名。另外，通过修改 HTTP 请求的 Host 字段也可以实现相同的效果。</p><h2 id="_5-通过浏览器访问" tabindex="-1"><a class="header-anchor" href="#_5-通过浏览器访问"><span>5.通过浏览器访问</span></a></h2><p>使用浏览器访问 http://www.yourdomain.com:8080 即可访问内网机器上的 80 端口服务，访问 http://www.yourdomain2.com:8080 可以访问内网机器上的 8080 端口服务。</p>`,15)),n("p",null,[n("a",d,[s[0]||(s[0]=l("原文链接")),o(a)])])])}const v=e(c,[["render",u],["__file","exp_custom_domain_web.html.vue"]]),b=JSON.parse('{"path":"/blogs/frp/gofrp/exp_custom_domain_web.html","title":"Frp 通过自定义域名访问内网的 Web 服务","lang":"en-US","frontmatter":{"title":"Frp 通过自定义域名访问内网的 Web 服务","date":"2025/3/15","tags":["gofrp"],"categories":["frp","gofrp"]},"headers":[{"level":2,"title":"1.配置 frps.toml","slug":"_1-配置-frps-toml","link":"#_1-配置-frps-toml","children":[]},{"level":2,"title":"2.配置 frpc.toml","slug":"_2-配置-frpc-toml","link":"#_2-配置-frpc-toml","children":[]},{"level":2,"title":"3.启动 frps 和 frpc","slug":"_3-启动-frps-和-frpc","link":"#_3-启动-frps-和-frpc","children":[]},{"level":2,"title":"4.域名解析","slug":"_4-域名解析","link":"#_4-域名解析","children":[]},{"level":2,"title":"5.通过浏览器访问","slug":"_5-通过浏览器访问","link":"#_5-通过浏览器访问","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"blogs/frp/gofrp/exp_custom_domain_web.md"}');export{v as comp,b as data};
